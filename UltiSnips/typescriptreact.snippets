snippet tsx
type Props = {
	$1
};

export const `!p snip.rv = fn.split('.')[0]` = (props: Props): JSX.Element => {
	$0
};
endsnippet

snippet log
console.log('$0');
endsnippet

snippet fform
import { Form, FormikProvider, useFormik } from 'formik';
import { InferType, object } from 'yup';

const validationSchema = object().shape({
	$1
})

type FormValues = InferType<typeof validationSchema>;

const useForm = () => {
	const onSubmit = (values: FormValues) => {
		$2
	}

	const formikBag = useFormik({
		onSubmit,
		initialValues: validationSchema.getDefault(),
		validationSchema,
	});

	return formikBag;
};

export const `!p snip.rv = fn.split('.')[0]` = (): JSX.Element => {
	const formikBag = useForm();

	return (
		<FormikProvider value={formikBag}>
			<Form>
				$3
			</Form>
		</FormikProvider>
	);
};
endsnippet
